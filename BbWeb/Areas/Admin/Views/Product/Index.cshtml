@model IEnumerable<BbWeb.Models.Product>

@{
    ViewData["Title"] = "Index";

    //Pager pager = new Pager();
    //int pageNo = 0;
    //if(ViewBag.Pager != null)
    //{
    //    pager = ViewBag.Pager;
    //    pageNo = pager.CurrentPage;
    //}
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<div class="col-4 p-0 justify-content-end">
    <form asp-controller="Product" asp-action="Index">
        <span class="btn-group">
            <input class="form-control" type="text" name="SearchText"
              placeholder="Search Product Name" />
              <input class="p-1 ml-2 btn btn-sm btn-dark" type="submit" value="Search" />
        </span>
    </form>
</div>
<table class="table table-striped border">
    <thead>
        <tr>
            <th>Sl</th>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
           @* <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Colour)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsAvailable)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tag)
            </th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>@item.Id</td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
           
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Colour)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsAvailable)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                 <img src="~/@item.Image" style="width:50px;height:50px" >
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Tag.TagName)
            </td>
            <td>
                <a asp-action="Edit" class="btn btn-dark" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" class="btn btn-secondary" asp-route-id="@item.Id">Details</a> |
                 @Html.ActionLink("Delete","Delete",new { id=item.Id },
                new{onclick="return confirm('Are you sure to delete this...?')"})
            </td>
        </tr>
}
    </tbody>
</table>

@*<div class="container">
    @if (pager.TotalPages > 0)
    {
         <ul class="pagination justify-content-end">

            @for (var pge =pager.StartPage; pge <= pager.EndPage; pge++)
            {
                <li class="page-item @(pge == pager.CurrentPage ? "active" : "")">
                     <a class="page-link" asp-controller="Product" asp-action="Index" asp-route-pg="@pge"> @pge </a>
                </li>
               
            }

         </ul>
    }
</div>*@